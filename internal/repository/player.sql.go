// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: player.sql

package repository

import (
	"context"
)

const createPlayer = `-- name: CreatePlayer :one

INSERT INTO player (username, password_hash)
VALUES ($1, $2)
RETURNING player_id, username, password_hash, created_at, updated_at
`

type CreatePlayerParams struct {
	Username     string `json:"username"`
	PasswordHash []byte `json:"-"`
}

func (q *Queries) CreatePlayer(ctx context.Context, arg CreatePlayerParams) (Player, error) {
	row := q.db.QueryRow(ctx, createPlayer, arg.Username, arg.PasswordHash)
	var i Player
	err := row.Scan(
		&i.PlayerID,
		&i.Username,
		&i.PasswordHash,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getPlayer = `-- name: GetPlayer :one

SELECT player_id, username, password_hash, created_at, updated_at FROM player
WHERE username = $1
`

func (q *Queries) GetPlayer(ctx context.Context, username string) (Player, error) {
	row := q.db.QueryRow(ctx, getPlayer, username)
	var i Player
	err := row.Scan(
		&i.PlayerID,
		&i.Username,
		&i.PasswordHash,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
